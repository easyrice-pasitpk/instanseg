Search.setIndex({"alltitles": {"API documentation": [[1, null]], "InstanSeg AI utils": [[3, null]], "InstanSeg augmentation_config": [[4, null]], "InstanSeg augmentations": [[5, null]], "InstanSeg biological_utils": [[6, null]], "InstanSeg create_bioimageio_model": [[7, null]], "InstanSeg data_download": [[8, null]], "InstanSeg data_loader": [[9, null]], "InstanSeg documentation": [[0, null]], "InstanSeg inference class": [[2, null]], "InstanSeg metrics": [[10, null]], "InstanSeg model_loader": [[11, null]], "InstanSeg pytorch_utils": [[12, null]], "InstanSeg tiling": [[13, null]], "InstanSeg utils": [[14, null]]}, "docnames": ["index", "instanseg", "instanseg.inference_class", "instanseg.utils.AI_utils", "instanseg.utils.augmentation_config", "instanseg.utils.augmentations", "instanseg.utils.biological_utils", "instanseg.utils.create_bioimageio_model", "instanseg.utils.data_download", "instanseg.utils.data_loader", "instanseg.utils.metrics", "instanseg.utils.model_loader", "instanseg.utils.pytorch_utils", "instanseg.utils.tiling", "instanseg.utils.utils"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "instanseg.rst", "instanseg.inference_class.rst", "instanseg.utils.AI_utils.rst", "instanseg.utils.augmentation_config.rst", "instanseg.utils.augmentations.rst", "instanseg.utils.biological_utils.rst", "instanseg.utils.create_bioimageio_model.rst", "instanseg.utils.data_download.rst", "instanseg.utils.data_loader.rst", "instanseg.utils.metrics.rst", "instanseg.utils.model_loader.rst", "instanseg.utils.pytorch_utils.rst", "instanseg.utils.tiling.rst", "instanseg.utils.utils.rst"], "indexentries": {"add_gradient() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.add_gradient", false]], "add_noisy_channels() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.add_noisy_channels", false]], "adjust_hue() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.adjust_hue", false]], "adjustcontrast() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.AdjustContrast", false]], "apply_cmap() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.apply_cmap", false]], "augmentations (class in instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.Augmentations", false]], "brightness_augment() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.brightness_augment", false]], "build_model_from_dict() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.build_model_from_dict", false]], "build_monai_model() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.build_monai_model", false]], "centroids_from_lab() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.centroids_from_lab", false]], "channel_shuffle() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.channel_shuffle", false]], "channel_subsample() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.channel_subsample", false]], "channel_suppress() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.channel_suppress", false]], "color_name_to_rgb() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.color_name_to_rgb", false]], "colourize() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.colourize", false]], "connected_components() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.connected_components", false]], "count_instances() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.count_instances", false]], "create_processed_datasets_dir() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.create_processed_datasets_dir", false]], "create_raw_datasets_dir() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.create_raw_datasets_dir", false]], "dilate() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.dilate", false]], "display() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.display", false]], "display_as_grid() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.display_as_grid", false]], "display_cells_and_nuclei() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.display_cells_and_nuclei", false]], "display_colourized() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.display_colourized", false]], "download_and_extract() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.download_and_extract", false]], "download_model() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.download_model", false]], "drag_and_drop_file() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.drag_and_drop_file", false]], "duplicate_grayscale_channels() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.duplicate_grayscale_channels", false]], "eccentricity_batch() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.eccentricity_batch", false]], "eval() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.eval", false]], "eval_medium_image() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.eval_medium_image", false]], "eval_small_image() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.eval_small_image", false]], "eval_whole_slide_image() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.eval_whole_slide_image", false]], "expand_labels_map() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.expand_labels_map", false]], "export_annotations_and_images() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.export_annotations_and_images", false]], "export_dataset_dict_as_folder() (in module instanseg.utils.data_loader)": [[9, "instanseg.utils.data_loader.export_dataset_dict_as_folder", false]], "export_to_torchscript() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.export_to_torchscript", false]], "extract_hematoxylin_stain() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.extract_hematoxylin_stain", false]], "extract_nucleus_and_cytoplasm_channels() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.extract_nucleus_and_cytoplasm_channels", false]], "fast_dual_iou() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fast_dual_iou", false]], "fast_iou() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fast_iou", false]], "fast_sparse_dual_iou() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fast_sparse_dual_iou", false]], "fast_sparse_intersection_over_minimum_area() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fast_sparse_intersection_over_minimum_area", false]], "fast_sparse_iou() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fast_sparse_iou", false]], "fill_holes() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.fill_holes", false]], "find_boundaries_max_pool_labeled() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.find_boundaries_max_pool_labeled", false]], "find_hard_boundaries() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.find_hard_boundaries", false]], "flips() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.flips", false]], "flood_fill() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.flood_fill", false]], "generate_colors() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.generate_colors", false]], "generate_random_label_area() (in module instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.generate_random_label_area", false]], "get_augmentation_dict() (in module instanseg.utils.augmentation_config)": [[4, "instanseg.utils.augmentation_config.get_augmentation_dict", false]], "get_features_by_location() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_features_by_location", false]], "get_image() (in module instanseg.utils.data_loader)": [[9, "instanseg.utils.data_loader.get_image", false]], "get_intersection_over_cell_area() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_intersection_over_cell_area", false]], "get_intersection_over_nucleus_area() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_intersection_over_nucleus_area", false]], "get_intersection_over_union() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_intersection_over_union", false]], "get_loaders() (in module instanseg.utils.data_loader)": [[9, "instanseg.utils.data_loader.get_loaders", false]], "get_marker_location() (in module instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.get_marker_location", false]], "get_masked_patches() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.get_masked_patches", false]], "get_mean_object_features() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_mean_object_features", false]], "get_multinucleated_cell_ids() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_multinucleated_cell_ids", false]], "get_nc_ratio() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_nc_ratio", false]], "get_nonnucleated_cell_ids() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_nonnucleated_cell_ids", false]], "get_nucleated_cell_ids() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.get_nucleated_cell_ids", false]], "get_patches() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.get_patches", false]], "get_processed_datasets_dir() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.get_processed_datasets_dir", false]], "get_raw_datasets_dir() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.get_raw_datasets_dir", false]], "has_adaptor_net_state_dict() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.has_adaptor_net_state_dict", false]], "has_object_classifier_state_dict() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.has_object_classifier_state_dict", false]], "has_pixel_classifier_model() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.has_pixel_classifier_model", false]], "has_pixel_classifier_state_dict() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.has_pixel_classifier_state_dict", false]], "histogramnormalize() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.HistogramNormalize", false]], "instance_wise_edt() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.instance_wise_edt", false]], "instanseg (class in instanseg.inference_class)": [[2, "instanseg.inference_class.InstanSeg", false]], "instanseg.inference_class": [[2, "module-instanseg.inference_class", false]], "instanseg.utils.augmentation_config": [[4, "module-instanseg.utils.augmentation_config", false]], "instanseg.utils.augmentations": [[5, "module-instanseg.utils.augmentations", false]], "instanseg.utils.biological_utils": [[6, "module-instanseg.utils.biological_utils", false]], "instanseg.utils.data_download": [[8, "module-instanseg.utils.data_download", false]], "instanseg.utils.data_loader": [[9, "module-instanseg.utils.data_loader", false]], "instanseg.utils.model_loader": [[11, "module-instanseg.utils.model_loader", false]], "instanseg.utils.pytorch_utils": [[12, "module-instanseg.utils.pytorch_utils", false]], "instanseg.utils.tiling": [[13, "module-instanseg.utils.tiling", false]], "instanseg.utils.utils": [[14, "module-instanseg.utils.utils", false]], "interp() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.interp", false]], "invert() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.invert", false]], "iou_heatmap() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.iou_heatmap", false]], "iou_test() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.iou_test", false]], "keep_only_largest_nucleus_per_cell() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.keep_only_largest_nucleus_per_cell", false]], "kornia_base_augmentations() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.kornia_base_augmentations", false]], "label_to_color_image() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.label_to_color_image", false]], "labels_to_features() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.labels_to_features", false]], "load_bsst265() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_BSST265", false]], "load_cellbindb() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CellBinDB", false]], "load_cellpose() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_Cellpose", false]], "load_cil() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CIL", false]], "load_consep() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CoNSeP", false]], "load_cpdmi_codex() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CPDMI_CODEX", false]], "load_cpdmi_vectra() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CPDMI_Vectra", false]], "load_cpdmi_zeiss() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_CPDMI_Zeiss", false]], "load_ihc_tma() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_IHC_TMA", false]], "load_lynsec() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_LyNSeC", false]], "load_model() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.load_model", false]], "load_model_weights() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.load_model_weights", false]], "load_monuseg() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_MoNuSeg", false]], "load_neurips() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_neurips", false]], "load_nuinsseg() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_NuInsSeg", false]], "load_pannuke() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_pannuke", false]], "load_tissuenet() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_tissuenet", false]], "load_tnbc_2018() (in module instanseg.utils.data_download)": [[8, "instanseg.utils.data_download.load_TNBC_2018", false]], "match_labels() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.match_labels", false]], "measure_average_instance_area() (in module instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.measure_average_instance_area", false]], "measure_time() (in module instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.measure_time", false]], "module": [[2, "module-instanseg.inference_class", false], [4, "module-instanseg.utils.augmentation_config", false], [5, "module-instanseg.utils.augmentations", false], [6, "module-instanseg.utils.biological_utils", false], [8, "module-instanseg.utils.data_download", false], [9, "module-instanseg.utils.data_loader", false], [11, "module-instanseg.utils.model_loader", false], [12, "module-instanseg.utils.pytorch_utils", false], [13, "module-instanseg.utils.tiling", false], [14, "module-instanseg.utils.utils", false]], "moving_average() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.moving_average", false]], "nc_heatmap() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.nc_heatmap", false]], "normalize() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.normalize", false]], "normalize_he_stains() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.normalize_HE_stains", false]], "percentile_normalize() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.percentile_normalize", false]], "perspective() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.perspective", false]], "plot_average() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.plot_average", false]], "pseudo_brightfield() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.pseudo_brightfield", false]], "pseudo_imc() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.pseudo_imc", false]], "randgaussiannoise() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.RandGaussianNoise", false]], "randomjpegcompression() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.randomJPEGcompression", false]], "read_image() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.read_image", false]], "read_model_args_from_csv() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.read_model_args_from_csv", false]], "read_pixel_size() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.read_pixel_size", false]], "read_slide() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.read_slide", false]], "remap_values() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.remap_values", false]], "remove_module_prefix_from_dict() (in module instanseg.utils.model_loader)": [[11, "instanseg.utils.model_loader.remove_module_prefix_from_dict", false]], "resize_lab() (in module instanseg.utils.augmentations)": [[5, "instanseg.utils.augmentations.resize_lab", false]], "resolve_cell_and_nucleus_boundaries() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.resolve_cell_and_nucleus_boundaries", false]], "rotate() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.rotate", false]], "save_image_with_label_overlay() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.save_image_with_label_overlay", false]], "save_output() (instanseg.inference_class.instanseg method)": [[2, "instanseg.inference_class.InstanSeg.save_output", false]], "set_export_paths() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.set_export_paths", false]], "show_images() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.show_images", false]], "show_umap_and_cluster() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.show_umap_and_cluster", false]], "timer() (in module instanseg.utils.utils)": [[14, "instanseg.utils.utils.timer", false]], "to_tensor() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.to_tensor", false]], "torch_fastremap() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.torch_fastremap", false]], "torch_onehot() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.torch_onehot", false]], "torch_rescale() (instanseg.utils.augmentations.augmentations method)": [[5, "instanseg.utils.augmentations.Augmentations.torch_rescale", false]], "torch_sparse_onehot() (in module instanseg.utils.pytorch_utils)": [[12, "instanseg.utils.pytorch_utils.torch_sparse_onehot", false]], "violin_plot_feature_location() (in module instanseg.utils.biological_utils)": [[6, "instanseg.utils.biological_utils.violin_plot_feature_location", false]]}, "objects": {"instanseg": [[2, 0, 0, "-", "inference_class"]], "instanseg.inference_class": [[2, 1, 1, "", "InstanSeg"]], "instanseg.inference_class.InstanSeg": [[2, 2, 1, "", "display"], [2, 2, 1, "", "eval"], [2, 2, 1, "", "eval_medium_image"], [2, 2, 1, "", "eval_small_image"], [2, 2, 1, "", "eval_whole_slide_image"], [2, 2, 1, "", "read_image"], [2, 2, 1, "", "read_pixel_size"], [2, 2, 1, "", "read_slide"], [2, 2, 1, "", "save_output"]], "instanseg.utils": [[4, 0, 0, "-", "augmentation_config"], [5, 0, 0, "-", "augmentations"], [6, 0, 0, "-", "biological_utils"], [8, 0, 0, "-", "data_download"], [9, 0, 0, "-", "data_loader"], [11, 0, 0, "-", "model_loader"], [12, 0, 0, "-", "pytorch_utils"], [13, 0, 0, "-", "tiling"], [14, 0, 0, "-", "utils"]], "instanseg.utils.augmentation_config": [[4, 3, 1, "", "get_augmentation_dict"]], "instanseg.utils.augmentations": [[5, 1, 1, "", "Augmentations"], [5, 3, 1, "", "generate_random_label_area"], [5, 3, 1, "", "get_marker_location"], [5, 3, 1, "", "measure_average_instance_area"], [5, 3, 1, "", "measure_time"], [5, 3, 1, "", "resize_lab"]], "instanseg.utils.augmentations.Augmentations": [[5, 2, 1, "", "AdjustContrast"], [5, 2, 1, "", "HistogramNormalize"], [5, 2, 1, "", "RandGaussianNoise"], [5, 2, 1, "", "add_gradient"], [5, 2, 1, "", "add_noisy_channels"], [5, 2, 1, "", "adjust_hue"], [5, 2, 1, "", "brightness_augment"], [5, 2, 1, "", "channel_shuffle"], [5, 2, 1, "", "channel_subsample"], [5, 2, 1, "", "channel_suppress"], [5, 2, 1, "", "colourize"], [5, 2, 1, "", "duplicate_grayscale_channels"], [5, 2, 1, "", "extract_hematoxylin_stain"], [5, 2, 1, "", "extract_nucleus_and_cytoplasm_channels"], [5, 2, 1, "", "flips"], [5, 2, 1, "", "invert"], [5, 2, 1, "", "kornia_base_augmentations"], [5, 2, 1, "", "normalize"], [5, 2, 1, "", "normalize_HE_stains"], [5, 2, 1, "", "perspective"], [5, 2, 1, "", "pseudo_brightfield"], [5, 2, 1, "", "pseudo_imc"], [5, 2, 1, "", "randomJPEGcompression"], [5, 2, 1, "", "rotate"], [5, 2, 1, "", "to_tensor"], [5, 2, 1, "", "torch_rescale"]], "instanseg.utils.biological_utils": [[6, 3, 1, "", "get_features_by_location"], [6, 3, 1, "", "get_intersection_over_cell_area"], [6, 3, 1, "", "get_intersection_over_nucleus_area"], [6, 3, 1, "", "get_intersection_over_union"], [6, 3, 1, "", "get_mean_object_features"], [6, 3, 1, "", "get_multinucleated_cell_ids"], [6, 3, 1, "", "get_nc_ratio"], [6, 3, 1, "", "get_nonnucleated_cell_ids"], [6, 3, 1, "", "get_nucleated_cell_ids"], [6, 3, 1, "", "keep_only_largest_nucleus_per_cell"], [6, 3, 1, "", "nc_heatmap"], [6, 3, 1, "", "resolve_cell_and_nucleus_boundaries"], [6, 3, 1, "", "show_umap_and_cluster"], [6, 3, 1, "", "violin_plot_feature_location"]], "instanseg.utils.data_download": [[8, 3, 1, "", "create_processed_datasets_dir"], [8, 3, 1, "", "create_raw_datasets_dir"], [8, 3, 1, "", "download_and_extract"], [8, 3, 1, "", "get_processed_datasets_dir"], [8, 3, 1, "", "get_raw_datasets_dir"], [8, 3, 1, "", "load_BSST265"], [8, 3, 1, "", "load_CIL"], [8, 3, 1, "", "load_CPDMI_CODEX"], [8, 3, 1, "", "load_CPDMI_Vectra"], [8, 3, 1, "", "load_CPDMI_Zeiss"], [8, 3, 1, "", "load_CellBinDB"], [8, 3, 1, "", "load_Cellpose"], [8, 3, 1, "", "load_CoNSeP"], [8, 3, 1, "", "load_IHC_TMA"], [8, 3, 1, "", "load_LyNSeC"], [8, 3, 1, "", "load_MoNuSeg"], [8, 3, 1, "", "load_NuInsSeg"], [8, 3, 1, "", "load_TNBC_2018"], [8, 3, 1, "", "load_neurips"], [8, 3, 1, "", "load_pannuke"], [8, 3, 1, "", "load_tissuenet"]], "instanseg.utils.data_loader": [[9, 3, 1, "", "export_dataset_dict_as_folder"], [9, 3, 1, "", "get_image"], [9, 3, 1, "", "get_loaders"]], "instanseg.utils.model_loader": [[11, 3, 1, "", "build_model_from_dict"], [11, 3, 1, "", "build_monai_model"], [11, 3, 1, "", "has_adaptor_net_state_dict"], [11, 3, 1, "", "has_object_classifier_state_dict"], [11, 3, 1, "", "has_pixel_classifier_model"], [11, 3, 1, "", "has_pixel_classifier_state_dict"], [11, 3, 1, "", "load_model"], [11, 3, 1, "", "load_model_weights"], [11, 3, 1, "", "read_model_args_from_csv"], [11, 3, 1, "", "remove_module_prefix_from_dict"]], "instanseg.utils.pytorch_utils": [[12, 3, 1, "", "centroids_from_lab"], [12, 3, 1, "", "connected_components"], [12, 3, 1, "", "dilate"], [12, 3, 1, "", "eccentricity_batch"], [12, 3, 1, "", "expand_labels_map"], [12, 3, 1, "", "fast_dual_iou"], [12, 3, 1, "", "fast_iou"], [12, 3, 1, "", "fast_sparse_dual_iou"], [12, 3, 1, "", "fast_sparse_intersection_over_minimum_area"], [12, 3, 1, "", "fast_sparse_iou"], [12, 3, 1, "", "fill_holes"], [12, 3, 1, "", "find_boundaries_max_pool_labeled"], [12, 3, 1, "", "find_hard_boundaries"], [12, 3, 1, "", "flood_fill"], [12, 3, 1, "", "get_masked_patches"], [12, 3, 1, "", "get_patches"], [12, 3, 1, "", "instance_wise_edt"], [12, 3, 1, "", "iou_heatmap"], [12, 3, 1, "", "iou_test"], [12, 3, 1, "", "match_labels"], [12, 3, 1, "", "remap_values"], [12, 3, 1, "", "torch_fastremap"], [12, 3, 1, "", "torch_onehot"], [12, 3, 1, "", "torch_sparse_onehot"]], "instanseg.utils.utils": [[14, 3, 1, "", "apply_cmap"], [14, 3, 1, "", "color_name_to_rgb"], [14, 3, 1, "", "count_instances"], [14, 3, 1, "", "display_as_grid"], [14, 3, 1, "", "display_cells_and_nuclei"], [14, 3, 1, "", "display_colourized"], [14, 3, 1, "", "download_model"], [14, 3, 1, "", "drag_and_drop_file"], [14, 3, 1, "", "export_annotations_and_images"], [14, 3, 1, "", "export_to_torchscript"], [14, 3, 1, "", "generate_colors"], [14, 3, 1, "", "interp"], [14, 3, 1, "", "label_to_color_image"], [14, 3, 1, "", "labels_to_features"], [14, 3, 1, "", "moving_average"], [14, 3, 1, "", "percentile_normalize"], [14, 3, 1, "", "plot_average"], [14, 3, 1, "", "save_image_with_label_overlay"], [14, 3, 1, "", "set_export_paths"], [14, 3, 1, "", "show_images"], [14, 3, 1, "", "timer"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": 2, "0": [2, 4, 5, 6, 12, 14], "001": 14, "1": [2, 4, 5, 6, 12, 14], "10": 14, "12": 14, "2": [2, 6, 12, 14], "20": [2, 14], "255": 14, "256": 5, "2d": 14, "3": [5, 12, 14], "30": 5, "32": 12, "4": 14, "5": [4, 6, 12], "512": 2, "64": 12, "8": 14, "80": 2, "99": 14, "A": [2, 5, 12, 14], "If": [2, 4, 6, 12, 14], "In": [0, 4], "It": [5, 6], "The": [2, 4, 12, 14], "acceler": 12, "accord": 12, "ad": [6, 14], "add_gradi": [1, 5], "add_noisy_channel": [1, 5], "adjac": 6, "adjust_hu": [1, 5], "adjustcontrast": [1, 5], "affin": 14, "ai": [0, 1], "aicsimageio": 2, "algorithm": 12, "all": 6, "all_output": 2, "allow": 0, "allow_unnucleated_cel": 6, "alongsid": 14, "alpha": 14, "amount": [4, 5], "an": [0, 2, 5, 12, 14], "ani": [5, 12], "annot": 14, "api": 0, "appli": [4, 5, 14], "apply_cmap": [0, 1, 14], "ar": [2, 4, 5, 12], "arbitrari": 0, "area": [4, 5, 6, 12], "arg": [4, 9, 12, 14], "arrai": [2, 14], "associ": 5, "assum": [4, 5], "augment": [0, 1, 4], "augmentation_config": [0, 1], "augmentation_dict": 5, "augmentation_typ": 4, "auto": [2, 12], "automat": [2, 4, 12], "avail": 12, "averag": [5, 14], "avoid": 2, "ax": 14, "b": 12, "back": 6, "background": [4, 12, 14], "base": [2, 5, 12, 14], "base_nam": 14, "basi": 4, "batch": 12, "batch_siz": 2, "being": 2, "benchmarking_data": 9, "between": [4, 6, 12], "betwen": 2, "bg_intens": 14, "binari": 12, "bioimageio": 2, "bioio": 2, "biological_util": [0, 1], "bit": 14, "black": 14, "bool": [2, 6, 8, 12, 14], "boolean": 12, "boundari": [6, 14], "brightfield": [0, 4], "brightfield_nuclei": 2, "brightness_aug": [1, 5], "build_model_dictionari": 11, "build_model_from_dict": [0, 1, 11], "build_monai_model": [0, 1, 11], "bw_mask": 12, "bw_seed": 12, "c": 5, "c_nuclei": 5, "calcul": [2, 12], "can": [2, 12, 14], "cannot": 2, "cell": [0, 2, 6], "cells_and_nuclei": 5, "centroids_from_lab": [0, 1, 12], "channel": [0, 4, 6, 14], "channel_invari": 5, "channel_nam": 6, "channel_shuffl": [1, 5], "channel_subsampl": [1, 5], "channel_suppress": [1, 5], "check": 4, "chosen": 2, "chromogen": 4, "circular": 5, "clamp": 6, "class": [0, 1, 5], "classif": 14, "clip": 14, "clip_pct": 14, "clip_percentil": 14, "close": 12, "cmap": 14, "collect": 2, "color": 14, "color_nam": 14, "color_name_to_rgb": [0, 1, 14], "colorbar": 14, "colormap": 14, "colour": [1, 5], "compat": 14, "compon": 12, "compress": 5, "comput": 12, "connect": [12, 14], "connected_compon": [0, 1, 12], "contain": [1, 4, 6, 12, 14], "control": 2, "convers": 14, "convert": 14, "coolwarm_r": 14, "coordin": [2, 14], "correspond": [2, 14], "count": 14, "count_inst": [0, 1, 14], "cpu": [11, 12], "creat": [12, 14], "create_processed_datasets_dir": [0, 1, 8], "create_raw_datasets_dir": [0, 1, 8], "crop": 5, "cucim": 12, "cuda": 12, "current_pixel_s": 5, "darker": 4, "data_download": [0, 1], "data_load": [0, 1], "dataset": 9, "debug": 5, "decid": 12, "default": 14, "dens": 12, "design": 14, "dest_path": 8, "destin": 9, "detail": [0, 2], "detect": 2, "detection_s": 2, "determin": 4, "devic": [2, 11], "dict": [8, 11], "dictionari": [4, 11], "differ": 2, "dilat": [0, 1, 12], "dim_in": [4, 5], "directli": 14, "directori": [2, 14], "discard": 12, "disk": 2, "displai": [1, 2], "display_as_grid": [0, 1, 14], "display_cells_and_nuclei": [0, 1, 14], "display_colour": [0, 1, 14], "display_list": 14, "distanc": 12, "divid": 12, "doe": 5, "don": 6, "done": [2, 4], "double_check": 5, "download": 2, "download_and_extract": [0, 1, 8], "download_model": [0, 1, 14], "downsampl": [2, 14], "dpi": 14, "drag_and_drop_fil": [0, 1, 14], "drop": 14, "dtype": 14, "dual": 12, "duplicate_grayscale_channel": [1, 5], "dure": 14, "e": 12, "each": [12, 14], "eccentr": 12, "eccentricity_batch": [0, 1, 12], "edt": 12, "edt_typ": 12, "effect": 5, "eg": 2, "encod": 12, "epsilon": 14, "eras": 6, "euclidean": 12, "eval": [1, 2], "eval_medium_imag": [1, 2], "eval_small_imag": [1, 2], "eval_whole_slide_imag": [1, 2], "evalu": 2, "exampl": 12, "expand_labels_map": [0, 1, 12], "expect": 2, "export_annotations_and_imag": [0, 1, 14], "export_dataset_dict_as_fold": [0, 1, 9], "export_to_torchscript": [0, 1, 14], "extens": 2, "extract_hematoxylin_stain": [1, 5], "extract_nucleus_and_cytoplasm_channel": [1, 5], "extract_to": 8, "f": 5, "factor": 2, "fals": [2, 5, 6, 8, 12, 14], "fast": 12, "fast_dual_i": [0, 1, 12], "fast_iou": [0, 1, 12], "fast_sparse_dual_i": [0, 1, 12], "fast_sparse_i": [0, 1, 12], "fast_sparse_intersection_over_minimum_area": [0, 1, 12], "faster": 12, "featur": [2, 14], "featurecollect": 14, "fg_mask": 14, "file": [2, 4, 14], "fill_hol": [0, 1, 12], "find": 2, "find_boundari": 14, "find_boundaries_max_pool_label": [0, 1, 12], "find_hard_boundari": [0, 1, 12], "first": [5, 6], "flatten": 12, "flip": [1, 5], "float": [2, 4, 5, 6, 12, 14], "flood_fil": [0, 1, 12], "fluoresc": [0, 4], "folder": [2, 11], "fontsiz": 14, "forc": 14, "format": 2, "from": [2, 6, 11, 12, 14], "func": 14, "function": [1, 2, 4, 5, 6, 12], "gener": 14, "generate_color": [0, 1, 14], "generate_random_label_area": [0, 1, 5], "geojson": [2, 14], "get_augmentation_dict": [0, 1, 4], "get_features_by_loc": [0, 1, 6], "get_imag": [0, 1, 9], "get_intersection_over_cell_area": [0, 1, 6], "get_intersection_over_nucleus_area": [0, 1, 6], "get_intersection_over_union": [0, 1, 6], "get_load": [0, 1, 9], "get_marker_loc": [0, 1, 5], "get_masked_patch": [0, 1, 12], "get_mean_object_featur": [0, 1, 6], "get_multinucleated_cell_id": [0, 1, 6], "get_nc_ratio": [0, 1, 6], "get_nonnucleated_cell_id": [0, 1, 6], "get_nucleated_cell_id": [0, 1, 6], "get_patch": [0, 1, 12], "get_processed_datasets_dir": [0, 1, 8], "get_raw_datasets_dir": [0, 1, 8], "github": 0, "give": 12, "given": [2, 12], "glasbei": 14, "gpu": 12, "graph": 12, "h": [5, 6, 12, 14], "handl": 2, "has_adaptor_net_state_dict": [0, 1, 11], "has_object_classifier_state_dict": [0, 1, 11], "has_pixel_classifier_model": [0, 1, 11], "has_pixel_classifier_state_dict": [0, 1, 11], "have": [6, 14], "heatmap": [6, 12], "height": 2, "help": 14, "histogramnorm": [1, 5], "hot": 12, "how": 0, "i": [0, 2, 4, 5, 6, 12, 14], "im": 14, "imag": [0, 2, 4, 5, 6, 12, 14], "image_arrai": 2, "image_mod": 4, "image_path": 2, "image_read": 2, "image_str": 2, "img": 14, "img_list": 14, "img_object": 9, "include_label": 14, "independ": 14, "infer": [0, 1], "inference_class": 2, "inform": 0, "inner": 14, "input": [2, 4, 14], "input_tensor": 6, "instal": 0, "instanc": [2, 4, 5, 12], "instance_wise_edt": [0, 1, 12], "instanseg": 1, "int": [2, 4, 5, 12, 14], "integ": 14, "intern": 2, "interp": [0, 1, 14], "intersect": [6, 12], "invert": [1, 5], "io": 2, "ioma": 12, "iou": [6, 12], "iou_heatmap": [0, 1, 12], "iou_test": [0, 1, 12], "issu": 2, "its": [6, 14], "jpeg": 5, "just": 6, "keep_only_largest_nucleus_per_cel": [0, 1, 6], "kornia_base_augment": [1, 5], "kwarg": [2, 14], "lab": [5, 6, 12, 14], "label": [2, 4, 5, 6, 12, 14], "label_boundary_mod": 14, "label_color": 14, "label_img": 14, "label_to_color_imag": [0, 1, 14], "labeled_imag": 12, "labels_to_featur": [0, 1, 14], "largest": 6, "last": 14, "left_titl": 14, "less": 14, "level": 2, "list": [1, 2, 14], "load_bsst265": [0, 1, 8], "load_cellbindb": [0, 1, 8], "load_cellpos": [0, 1, 8], "load_cil": [0, 1, 8], "load_consep": [0, 1, 8], "load_cpdmi_codex": [0, 1, 8], "load_cpdmi_vectra": [0, 1, 8], "load_cpdmi_zeiss": [0, 1, 8], "load_ihc_tma": [0, 1, 8], "load_lynsec": [0, 1, 8], "load_model": [0, 1, 11], "load_model_weight": [0, 1, 11], "load_monuseg": [0, 1, 8], "load_neurip": [0, 1, 8], "load_nuinsseg": [0, 1, 8], "load_pannuk": [0, 1, 8], "load_tissuenet": [0, 1, 8], "load_tnbc_2018": [0, 1, 8], "look": [0, 2], "loop": 12, "m": 12, "main": 2, "make": 12, "manner": 2, "map": 12, "mask": [6, 12, 14], "mask_tensor": 12, "match": [6, 12], "match_label": [0, 1, 12], "max": [4, 5], "max_channel": 5, "maximum": [2, 12], "mean": 4, "measur": 5, "measure_average_instance_area": [0, 1, 5], "measure_tim": [0, 1, 5], "medium": 2, "memori": 2, "merg": 2, "meta": 5, "metadata": [2, 5], "method": 2, "metric": [0, 1], "micron": 2, "microscopi": 0, "mif": 14, "min": [4, 5], "min_channel": 5, "minim": 4, "minimum": 12, "minmax": 4, "modal": [4, 5], "mode": 14, "model": [2, 11, 14], "model_load": [0, 1], "model_path": 14, "model_str": [11, 14], "model_typ": 2, "modifi": 11, "modul": [2, 11], "monai": 12, "more": [0, 2, 14], "move": 14, "moving_averag": [0, 1, 14], "must": 6, "n": [5, 12], "n_col": 14, "name": [2, 14], "nc_heatmap": [0, 1, 6], "ncol": 14, "ndarrai": [2, 6, 14], "need": 14, "nn": 2, "no_zip": 8, "non": [12, 14], "none": [2, 4, 5, 6, 11, 14], "normal": [1, 2, 5, 12, 14], "normalis": 2, "normalisation_subsampling_factor": 2, "normalize_he_stain": [1, 5], "noth": 14, "np": 14, "nuclei": [2, 4, 6], "nuclei_channel": [4, 5], "nucleu": [0, 6], "num_color": 14, "num_iter": 12, "number": [0, 2, 4, 14], "numpi": 14, "object": [2, 5, 12], "object_typ": 14, "offset": 14, "one": [12, 14], "onehot": 12, "onehot1": 12, "onehot2": 12, "onli": 6, "open": 14, "oper": 14, "option": [2, 4, 14], "original_imag": 14, "other": [2, 8, 14], "otherwis": 14, "otsu": 2, "out": 14, "outer": 14, "output": [2, 14], "output_dir": 14, "over": [6, 12], "overlai": [2, 14], "overlaid": 2, "overlap": [2, 6, 12], "packag": [0, 1, 12], "pad": 14, "page": [0, 1], "pair": 12, "param": [2, 11, 14], "paramet": [2, 5, 14], "part": 2, "particular": 0, "pass": 2, "patch_siz": 12, "path": [2, 8, 11, 14], "per": [4, 6], "percentil": [5, 14], "percentile_norm": [0, 1, 14], "perspect": [1, 5], "pixel": [2, 4, 6, 12, 14], "pixel_s": [2, 4], "plot": 14, "plot_averag": [0, 1, 14], "postprocess": 12, "prefix": 11, "process": 2, "processing_method": 2, "project": 0, "promin": 14, "provid": 2, "pseudo_brightfield": [1, 5], "pseudo_imc": [1, 5], "public": [1, 2], "py": 4, "python": 0, "pytorch": 2, "pytorch_util": [0, 1], "quickli": 14, "randgaussiannois": [1, 5], "random": 5, "random_se": [5, 11, 14], "randomjpegcompress": [1, 5], "ratio": 6, "read": 2, "read_imag": [1, 2], "read_model_args_from_csv": [0, 1, 11], "read_pixel_s": [1, 2], "read_slid": [1, 2], "reader": 2, "recov": 6, "region": 2, "remap": 12, "remap_valu": [0, 1, 12], "remov": [6, 11, 12], "remove_module_prefix_from_dict": [0, 1, 11], "request": 2, "requested_pixel_s": 5, "requir": [2, 5], "rescal": [2, 4], "rescale_output": 2, "resiz": 5, "resize_lab": [0, 1, 5], "resolv": 6, "resolve_cell_and_nucleus_boundari": [0, 1, 6], "respect": 6, "result": [11, 14], "return": [2, 4, 6, 11, 12, 14], "return_imag": 14, "return_image_tensor": 2, "return_lab": 6, "return_lab_id": 12, "rgb": 14, "right_sid": 14, "robustli": 14, "rotat": [1, 5], "roughli": 5, "run": 2, "safe": 2, "same": [2, 6, 14], "save": [2, 14], "save_geojson": 2, "save_image_with_label_overlai": [0, 1, 2, 14], "save_output": [1, 2], "save_overlai": 2, "save_str": 14, "scale": 14, "scale_per_channel": 14, "scikit": 14, "second": 6, "see": [2, 12], "segment": [0, 2, 14], "segmentation_dataset": 8, "semant": 0, "set": [4, 12, 14], "set_export_path": [0, 1, 14], "shape": [5, 6, 12, 14], "should": [2, 14], "show_exampl": 14, "show_imag": [0, 1, 14], "show_umap_and_clust": [0, 1, 6], "silent": 2, "simul": 5, "simultan": [0, 2], "singl": 2, "size": [2, 5, 14], "skimag": 2, "slide": 2, "slideio": 2, "small": 2, "so": [4, 5, 12], "space": 2, "spars": 12, "sparse_onehot": 12, "specifi": 2, "split": 2, "stand": 14, "state_dict": 11, "str": [2, 4, 11, 12, 14], "strict": 12, "string": 2, "subpixel": 14, "subsampl": 2, "subsampling_factor": [5, 14], "sure": 12, "surfac": 4, "system": 14, "t": 6, "take": [0, 6, 12], "target": 2, "target_segment": 5, "tensor": [2, 5, 6, 12, 14], "test": [4, 12, 14], "than": [4, 14], "them": 6, "thi": [1, 2, 4, 5, 6, 12, 14], "thick": 14, "threshold": [2, 6, 12], "thumbnail": 2, "tiffslid": 2, "tile": [2, 12], "tile_1": 12, "tile_2": 12, "tile_s": 2, "timer": [0, 1, 14], "timer_flag": 14, "tissu": 2, "titl": [6, 14], "title_height": 14, "to_numpi": 6, "to_tensor": [1, 5], "top_titl": 14, "torch": [2, 12, 14], "torch_fastremap": [0, 1, 12], "torch_onehot": [0, 1, 12], "torch_rescal": [1, 5], "torch_sparse_onehot": [0, 1, 12], "torchscript": 14, "torchscript_nam": 14, "total": 14, "train": [4, 14], "train_images_loc": 9, "train_labels_loc": 9, "train_meta": 9, "transform": [12, 14], "true": [2, 5, 6, 8, 12, 14], "tupl": [2, 4, 6, 12, 14], "two": [6, 12], "type": 2, "uint8": 14, "under": 4, "underli": 14, "union": 12, "unit": 12, "url": 8, "us": [2, 5, 12, 14], "use_optimized_param": 14, "use_otsu_threshold": 2, "user": 14, "usual": 2, "util": [0, 1, 4, 5, 6, 8, 9, 11, 12], "val_images_loc": 9, "val_labels_loc": 9, "val_meta": 9, "valu": [4, 12, 14], "verbos": [2, 8, 14], "version": 14, "viewer": 14, "violin_plot_feature_loc": [0, 1, 6], "viridi": 14, "visual": 14, "w": [5, 6, 12, 14], "weight": 11, "well": 2, "were": 6, "what": 2, "when": 14, "where": [2, 6, 12, 14], "whether": [2, 14], "which": 2, "while": 12, "white": 14, "whole": [2, 6], "width": 2, "window": 14, "window_s": 14, "within": 12, "wsi": 2, "x": [12, 14], "x_cytoplasm": 6, "x_featur": 6, "x_nuclei": 6, "y": 12, "your": 2, "zarr": 2, "zero": 14}, "titles": ["InstanSeg documentation", "API documentation", "InstanSeg inference class", "InstanSeg AI utils", "InstanSeg augmentation_config", "InstanSeg augmentations", "InstanSeg biological_utils", "InstanSeg create_bioimageio_model", "InstanSeg data_download", "InstanSeg data_loader", "InstanSeg metrics", "InstanSeg model_loader", "InstanSeg pytorch_utils", "InstanSeg tiling", "InstanSeg utils"], "titleterms": {"ai": 3, "api": 1, "augment": 5, "augmentation_config": 4, "biological_util": 6, "class": 2, "create_bioimageio_model": 7, "data_download": 8, "data_load": 9, "document": [0, 1], "infer": 2, "instanseg": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "metric": 10, "model_load": 11, "pytorch_util": 12, "tile": 13, "util": [3, 14]}})